name: release project

on:
  workflow_call:
    inputs:
      changelogPath:
        required: true
        type: string
        description: The path to CHANGELOG.md

jobs:
  extractChangelog:
    uses: ./.github/workflows/extract_changelog.yaml
    with:
      changelogPath: ${{inputs.changelogPath}}
  checkVersion:
    needs: extractChangelog
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.tag-exists.outputs.exists }}
    steps:
      - name: check if tag exists
        uses: mukunku/tag-exists-action@bdad1eaa119ce71b150b952c97351c75025c06a9 # v1.6.0
        id: tag-exists
        with:
          tag: v${{ needs.extractChangelog.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  createBranch:
    needs: [extractChangelog, checkVersion]
    if: needs.checkVersion.outputs.exists == 'false'
    uses: ./.github/workflows/create_js_branch.yaml
    with:
        version: v${{ needs.extractChangelog.outputs.version }}
  createRelease:
    needs: [checkVersion, extractChangelog, createBranch]
    permissions:
      contents: write
    if: needs.checkVersion.outputs.exists == 'false'
    uses: ./.github/workflows/create_release.yaml
    with:
      branch: releases/v${{ needs.extractChangelog.outputs.version }}
      version: v${{ needs.extractChangelog.outputs.version }}
      body: ${{ needs.extractChangelog.outputs.body }}
  updateMajorTag:
     runs-on: ubuntu-latest
     permissions:
       contents: write
     needs: [extractChangelog, createRelease]
     steps:
       - uses: actions/checkout@v4
         with:
           ref: releases/v${{ needs.extractChangelog.outputs.version }}
       - name: get major version tag
         id: major-version-tag
         env:
           NEW_RELEASE_TAG: ${{ needs.extractChangelog.outputs.version }}
         run:
           echo "MAJOR_VERSION_TAG=v${NEW_RELEASE_TAG%%.*}" >> "$GITHUB_OUTPUT"
       - name: delete old major tag
         continue-on-error: true
         env:
            GH_TOKEN: ${{ github.token }}
            MAJOR_VERSION_TAG: ${{ steps.major-version-tag.outputs.MAJOR_VERSION_TAG }}
         run:
           git push origin :refs/tags/$MAJOR_VERSION_TAG
       - name: create new major tag
         env:
            GH_TOKEN: ${{ github.token }}
            MAJOR_VERSION_TAG: ${{ steps.major-version-tag.outputs.MAJOR_VERSION_TAG }}
         run: |
           git tag -a $MAJOR_VERSION_TAG  -m "Latest $MAJOR_VERSION_TAG Release"
           git push origin regs/tags/$MAJOR_VERSION_TAG
